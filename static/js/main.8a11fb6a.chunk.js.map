{"version":3,"sources":["App.js","img/calc.gif","navbar.jsx","footer.jsx","logo.svg","serviceWorker.js","index.js"],"names":["App","useState","result","setResult","inputRef","useRef","resultdata","resultdata1","object","json","handleClick","e","concat","target","name","backspace","slice","length","clear","calculate","final","eval","toString","error","console","log","forEach","res","key","JSON","stringify","useEffect","current","focus","fileType","fileExtension","exportToCSV","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","data","Blob","FileSaver","className","id","class","src","web","alt","value","ref","onBlur","onClick","module","exports","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8a11fb6a.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport logo from './logo.svg';\nimport { CSVLink, CSVDownload } from 'react-csv';\nimport './App.css';\nimport web from './img/calc.gif';\nimport NavBar from './navbar';\nimport Footer from './footer';\nfunction App() {\n  const [result, setResult] = useState(\"\");\n  const inputRef = useRef(null);\n  const resultdata = \"\";\n  const resultdata1 = [];\n  var object = {};\n  var json = [];\n  useEffect(() => inputRef.current.focus());\n\n  function handleClick(e) {\n    setResult(result.concat(e.target.name))\n  }\n  function backspace() {\n    setResult(result.slice(0, result.length - 1))\n  }\n  function clear() {\n    setResult(\"\")\n  }\n  function calculate() {\n    try {\n      var final = result.concat(\"=\")\n      setResult(final.concat(eval(result).toString()));\n      var resultdata = final.concat(eval(result).toString())\n\n    }\n    catch (error) {\n      setResult(\"Error\")\n    }\n\n    console.log(resultdata)\n    var resultdata1 = [resultdata]\n    var object = {};\n    resultdata1.forEach(function (res, key) {\n      object[key] = resultdata1;\n    });\n    var json = JSON.stringify(object);\n\n\n  }\n  const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n  const fileExtension = '.xlsx';\n\n  const exportToCSV = (fileName) => {\n\n    const ws = XLSX.utils.json_to_sheet(json);\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  }\n  return (\n\n    <div className=\"m\">\n      <NavBar />\n      <section id=\"header\" className=\"d-flex align-items-center\">\n        <div className=\"container-fluid nav_bg\">\n          <div className=\"row\">\n            <div className=\"col-10 mx-auto\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 pt-3 pt-lg-5 order-2 order-lg-1 d-flex justify-content-center flex-column\">\n\n                  <h1>Do your Calculations<strong className=\"brand-name\"> here!!</strong> </h1>\n\n                  <div className=\"mt-3\">\n\n                  </div>\n                </div>\n                <div class=\"col-lg-6 order-1 order-lg-2 header-img pt-3 mx-auto\">\n                  <img src={web} className=\"img-fluid animated\" alt=\"home-img\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section id=\"header\" className=\"d-flex align-items-center\">\n        <div className=\"container-fluid nav_bg\">\n          <div className=\"row\">\n            <div className=\"col-10 mx-auto\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 pt-3 pt-lg-5 order-2 order-lg-2 d-flex justify-content-center flex-column\">\n                  <h2 className=\"text-center\">Features</h2>\n                  <br/>\n                <ol class=\"step pl-0\">\n          <li class=\"step-element pb-0\">\n            <div class=\"step-number\">\n              <span class=\"number\">1</span>\n            </div>\n            <div class=\"step-excerpt\">\n              <h6 class=\"font-weight-bold dark-grey-text mb-3\">Addition,Subtraction\n              <br/>Multiplication,Division</h6>\n              <p class=\"text-muted\"><h3><strong>+,-,*,/</strong></h3></p>\n            </div>\n          </li>\n          <li class=\"step-element pb-0\">\n            <div class=\"step-number\">\n              <span class=\"number\">2</span>\n            </div>\n            <div class=\"step-excerpt\">\n              <h6 class=\"font-weight-bold dark-grey-text mb-3\">Reminder</h6>\n              <p class=\"text-muted\"><h5><strong>3%2=1</strong></h5></p>\n            </div>\n          </li>\n          <li class=\"step-element pb-0\">\n            <div class=\"step-number\">\n              <span class=\"number\">3</span>\n            </div>\n            <div class=\"step-excerpt\">\n              <h6 class=\"font-weight-bold dark-grey-text mb-3\">Powers</h6>\n              <p class=\"text-muted\"><h5>Eg::<strong className=\"m-3\">2**2= 2^2=4 , 2**3= 2^3=8</strong></h5></p>\n            </div>\n          </li>\n        </ol>\n\n                  <div className=\"mt-3\">\n\n                  </div>\n                </div>\n                <div class=\"col-lg-6 order-1 order-lg-1 header-img pt-3 pb-5\">\n                  <div className=\"cApp\">\n                    <form>\n                      <input type=\"text\" value={result} ref={inputRef} onBlur={handleClick}></input>\n                    </form>\n                    <div className=\"keypad\">\n                      <button id=\"clear\" onClick={clear}>C</button>\n                      <button id=\"backspace\" onClick={backspace} id=\"b\"><i className=\"fas fa-backspace\"></i></button>\n                      <button name=\"%\" onClick={handleClick} id=\"o\">%</button>\n                      <button name=\"/\" onClick={handleClick} id=\"o\">/</button>\n\n                      <button name=\"7\" onClick={handleClick}>7</button>\n                      <button name=\"8\" onClick={handleClick}>8</button>\n                      <button name=\"9\" onClick={handleClick}>9</button>\n                      <button name=\"+\" onClick={handleClick} id=\"o\">+</button>\n                      <button name=\"4\" onClick={handleClick}>4</button>\n                      <button name=\"5\" onClick={handleClick}>5</button>\n                      <button name=\"6\" onClick={handleClick}>6</button>\n                      <button name=\"-\" onClick={handleClick} id=\"o\">-</button>\n                      <button name=\"1\" onClick={handleClick}>1</button>\n                      <button name=\"2\" onClick={handleClick}>2</button>\n                      <button name=\"3\" onClick={handleClick}>3</button>\n                      <button name=\"*\" onClick={handleClick} id=\"o\">*</button>\n                      <button name=\"0\" onClick={handleClick}>0</button>\n                      <button name=\".\" onClick={handleClick}>.</button>\n\n\n                      <button id=\"result\" onClick={calculate}> <i className=\"fa fa-pencil-square\" ></i> Result</button>\n                      <CSVLink data={resultdata} id=\"do1\">Download Records</CSVLink>\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/calc.1164913b.gif\";","import React from \"react\";\r\nconst NavBar = () => {\r\n    return (<div>\r\n         <nav className=\"navbar navbar-expand-lg navbar-dark py-3 \">\r\n\r\n<div className=\"container\">\r\n\r\n  <button className=\"navbar-toggler float-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button> \r\n\r\n  <div className=\"collapse navbar-collapse justify-content-center\" id=\"navbarSupportedContent\">\r\n\r\n    <ul className=\"navbar-nav\">\r\n\r\n       <li className=\"nav-item mx-auto\">\r\n      <b><h3>Calculator</h3> </b>\r\n      </li>\r\n      \r\n\r\n    </ul>\r\n   \r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n</nav>\r\n    </div>\r\n      \r\n        );\r\n      };\r\n      \r\n      export default NavBar;\r\n      ","import React from \"react\";\r\n const Footer= () => {\r\n    return (\r\n<footer class=\"footer mt-auto py-3 \">\r\n  <div class=\"container\">\r\n    <span >Made By Vipasha</span>\r\n  </div>\r\n</footer>\r\n)}\r\nexport default Footer;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}